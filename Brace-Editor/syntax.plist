<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>RegEx</key>
	<dict>
		<key>PHP</key>
		<dict>
			<key>keyWords</key>
			<string>\b(__halt_compiler()|abstract|and|array()|as|break|callable|case|catch|class|clone|const|continue|declare|default|die()|do|echo|else|elseif|empty()|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval()|exit()|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset()|list()|namespace|new|or|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset()|use|var|while|xor|yield)\b</string>
			<key>types</key>
			<string>\$\w*</string>
			<key>strings</key>
			<string>\&quot;.*?(\&quot;|$)</string>
			<key>numbers</key>
			<string>(\\d+\\.?\\d+e[\\+\\-]?\\d+|\\d+\\.\\d+|∞|\\d+)</string>
			<key>comments</key>
			<string>(//.*|/\\*.*?\\*/)</string>
		</dict>
		<key>Ruby</key>
		<dict>
			<key>keyWords</key>
			<string>\b(BEGIN|END|__ENCODING__|__END__|__FILE__|__LINE__|alias|and|begin|break|case|class|def|defined?|do|else|elsif|end|ensure|false|for|if|in|module|next|nil|not|or|redo|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)\b</string>
			<key>strings</key>
			<string>\&quot;.*?(\&quot;|$)</string>
			<key>numbers</key>
			<string>(\\d+\\.?\\d+e[\\+\\-]?\\d+|\\d+\\.\\d+|∞|\\d+)</string>
			<key>comments</key>
			<string>#.*</string>
			<key>types</key>
			<string>(^@)([a-z_A-Z]*)</string>
		</dict>
		<key>Python</key>
		<dict>
			<key>keyWords</key>
			<string>\b(and|del|from|not|while|as|elif|global|or|with|assert|else|if|pass|yield|break|except|import|print|class|exec|in|raise|continue|finally|is|return |def|for|lambda|try)\b</string>
			<key>types</key>
			<string>\b(number|string|List|Touple|Dictionary)\b</string>
			<key>strings</key>
			<string>\&quot;.*?(\&quot;|$)</string>
			<key>numbers</key>
			<string>(\\d+\\.?\\d+e[\\+\\-]?\\d+|\\d+\\.\\d+|∞|\\d+)</string>
			<key>comments</key>
			<string>#.*</string>
		</dict>
		<key>C++</key>
		<dict>
			<key>keyWords</key>
			<string>\b(alignas |alignof |and|and_eq|asm|auto|bitand|bitor|bool|break|case|catch|char|char16_t |char32_t |class|compl|concept|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|main|include)\b</string>
			<key>types</key>
			<string>\b(char|int|float|double|long|signed|unsigned|short|bool|void)\b</string>
			<key>comments</key>
			<string>(//.*|/\\*.*?\\*/)</string>
			<key>strings</key>
			<string>\&quot;.*?(\&quot;|$)</string>
			<key>numbers</key>
			<string>(\\d+\\.?\\d+e[\\+\\-]?\\d+|\\d+\\.\\d+|∞|\\d+)</string>
		</dict>
		<key>C</key>
		<dict>
			<key>numbers</key>
			<string>(\\d+\\.?\\d+e[\\+\\-]?\\d+|\\d+\\.\\d+|∞|\\d+)</string>
			<key>keyWords</key>
			<string>\b(auto|break|case|continue|default|do|else|enum|extern|for|goto|if|register|return|short|sizeof|static|struct|switch|typedef|union|void|volatile|while|main|include)\b</string>
			<key>strings</key>
			<string>\&quot;.*?(\&quot;|$)</string>
			<key>comments</key>
			<string>(//.*|/\\*.*?\\*/)</string>
			<key>types</key>
			<string>\b(char|int|float|double|long|signed|unsigned|short|void)\b</string>
		</dict>
	</dict>
	<key>Colors</key>
	<dict>
		<key>types</key>
		<array>
			<integer>111</integer>
			<integer>65</integer>
			<integer>167</integer>
		</array>
		<key>strings</key>
		<array>
			<integer>207</integer>
			<integer>49</integer>
			<integer>37</integer>
		</array>
		<key>numbers</key>
		<array>
			<integer>41</integer>
			<integer>52</integer>
			<integer>212</integer>
		</array>
		<key>keyWords</key>
		<array>
			<integer>184</integer>
			<integer>51</integer>
			<integer>161</integer>
		</array>
		<key>comments</key>
		<array>
			<integer>0</integer>
			<integer>106</integer>
			<integer>0</integer>
		</array>
	</dict>
</dict>
</plist>
